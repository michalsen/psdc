--- Injected ---
attributes: {{ attributes.addClass('foo') }}
variant: {{ variant }}

--- Story ---
test_slot_content: {{ test_slot_content }}
test_slot_string: {{ test_slot_string }}
test_prop_string_default: {{ test_prop_string_default }}
test_prop_string_enum: {{ test_prop_string_enum }}
test_prop_string_enum_default: {{ test_prop_string_enum_default }}
test_prop_string_length: {{ test_prop_string_length }}
test_prop_boolean: {{ test_prop_boolean }}
test_prop_integer: {{ test_prop_integer }}
test_prop_number_1: {{ test_prop_number_1 }}
test_prop_number_default: {{ test_prop_number_default }}
test_prop_number_2: {{ test_prop_number_2 }}
test_prop_url_1: {{ test_prop_url_1 }}
test_prop_url_2: {{ test_prop_url_2 }}
test_prop_color: {{ test_prop_color }}
test_prop_color_6: {{ test_prop_color_6 }}
test_prop_color_3: {{ test_prop_color_3 }}
test_prop_object: {{ test_prop_object.foo }}-{{ test_prop_object.bar }}
test_prop_array: {{ test_prop_array|join(', ') }}
test_prop_enum_list: {{ test_prop_enum_list|join(', ') }}
test_prop_enum_list_2: {{ test_prop_enum_list_2|join(', ') }}
test_prop_enum_list_3: {{ test_prop_enum_list_3|join(', ') }}
test_prop_links:
{% for link in test_prop_links %}
  {{ link.title }}
  {% for sub_link in link.below %}
    - {{ sub_link.title }} -
  {% endfor %}
{% endfor %}
test_prop_links_2:
{% for link in test_prop_links_2 %}
  {{ link.title }} {{ link.extra }}
  {% for sub_link in link.below %}
    - {{ sub_link.title }} -
  {% endfor %}
{% endfor %}
test_prop_identifier: {{ test_prop_identifier }}
test_prop_list: {{ test_prop_list|join(', ') }}
test_prop_attributes_sdc: {{ test_prop_attributes_sdc }}

--- TESTS FILTERS ---

-- IGNORE --

{{ 'foo'|drupal_escape }}
{{ 'foo'|escape }}
{{ 'foo'|e }}

-- ALLOW examples from Twig documentation: https://twig.symfony.com/doc/3.x/filters/index.html --

{% set abs_number = -5 %}
{{ abs_number|abs }}
{% set batch_items = ['a', 'b', 'c', 'd'] %}
<table>
  {% for row in batch_items|batch(3, 'No item') %}
    <tr>
      {% for index, column in row %}
        <td>{{ index }} - {{ column }}</td>
      {% endfor %}
    </tr>
  {% endfor %}
</table>
{{ 'my first car'|capitalize }}
{# {{ var|default('var is not defined') }} #}
{{ [1, 2, 3, 4]|first }}
{% set format_item = 'foo' %}
{{ '%s and %s.'|format(format_item, 'bar') }}
{{ [1, 2, 3]|join }}
{% set data_json = {foo: 'bar'} %}
{{ data_json|json_encode() }}
{{ [1, 2, 3, 4]|last }}
{% set test_length = 10 %}
{{ test_length|length }}
{{ 'FOO'|lower }}
{% set map_items = {
  'Foo': 'Baz',
  'Bar': 'Qux',
} %}
{{ map_items|map((value, key) => "#{key} #{value}")|join(', ') }}
{% set replace_item = 'foo' %}
{{ 'I like %this% and %that%.'|replace({'%this%': replace_item, '%that%': 'bar'}) }}
{% for reverse_key, reverse_value in {1: 'a', 2: 'b', 3: 'c'}|reverse %}
  {{ reverse_key }}: {{ reverse_value }}
{%- endfor %}
{{ 42.55|round }}
{{ '12345'|slice(1, 2) }}
{% set sort_items = [
  {name: 'Apples', quantity: 5},
  {name: 'Oranges', quantity: 2},
  {name: 'Grapes', quantity: 4},
] %}
{% for sort_item in sort_items|sort((a, b) => a.quantity <=> b.quantity)|column('name') %}
  {{ sort_item }}
{% endfor %}
{% set striptags_html = '<p>foo<span>bar</span></p>' %}
{{ striptags_html|striptags }}
{{ 'my first car'|title }}
{{ '  I like Drupal.  '|trim }}
{{ 'welcome'|upper }}
{{ 'path-segment*foo'|url_encode }}
- Twig filters with Drupal. -
{{ {}|add_class('my-new-body-class') }}
{{ '1 2 Foô'|clean_class }}
{{ '1 2 Foô'|clean_id }}
{{ {}|set_attribute('fetchpriority', 'auto') }}
{{ 'foo'|t }}
{{ 'foo'|trans }}
- Twig filters. -
{% set column_items = [{ 'fruit' : 'apple'}, {'fruit' : 'orange' }] %}
{% set column_test = column_items|column('fruit') %} {{ column_test|join(', ') }}
{% for keys_key in ['a', 'b', 'c', 'd']|keys %}
  {{ keys_key }}
{% endfor %}
{% set merge_values = [1, 2] %}
{% set merge_values = merge_values|merge(['apple', 'orange']) %}
{{ 'I like Twig.\nYou will like it too.'|nl2br }}
{{ 9800.333|number_format(2, '.', ',') }}
{% set split_items = 'one,two,three'|split(',') %} {{ split_items|join(', ') }}
{% set filter_sizes = [34, 36, 38, 40, 42] %}
{% for v in filter_sizes|filter(v => v > 38) -%}
  {{ v }}
{% endfor %}
{{ [1, 2, 3]|reduce((c, v) => c + v) }}

-- WARN --

{% set var_placeholder = 'foo' %}
placeholder WARN: {{ var_placeholder|placeholder }}
{% set date = '01/01/1990' %}
placeholder WARN: {% trans %}Foo {{ date|placeholder }}{% endtrans %}

-- DEPRECATE --

{% set safe_test = ['foo', 'bar'] %}
safe_join WARN: {{ safe_test|safe_join(', ') }}
spaceless WARN: {{ ' foo '|spaceless }}

-- FORBID --

add_suggestion ERROR: {{ {'#theme': 'foo'}|add_suggestion('bar') }}
clean_unique_id ERROR: {{ 'foo'|clean_unique_id }}
convert_encoding ERROR: {{ 'foo'|convert_encoding('UTF-8', 'iso-2022-jp') }}
date_modify / date ERROR: {{ ''|date_modify('+1 day')|date('Y-M-d') }}
format_date ERROR: {{ 1669324282|format_date('html_date') }}
render ERROR: {{ {}|render }}
without ERROR: {{ test_slot_content|without('links') }}

-- Test case for some filters --

default ERROR: {{ test_prop_boolean|default('error') }}
default ERROR: {{ true|default('error') }}
default ERROR: {{ false|default('error') }}
default ERROR: {{ null|default('error') }}

{% set my_var = null %}
default OK: {{ my_var|default('var is not defined') }}
default OK: {{ my_var.foo|default('foo item on var is not defined') }}
default OK: {{ my_var['foo']|default('foo item on var is not defined') }}
default OK: {{ ''|default('passed var is empty') }}
default OK: {{ my_var.method('bar'|default('foo'))|default('bar') }}
default OK: {{ my_var|default() }}
default OK: {{ 'foo'|default() }}

set_attribute ERROR: {{ test_slot_content|add_class('foo')|set_attribute('bar', 'baz') }}
set_attribute ERROR: {{ test_slot_content|set_attribute('baz', {baz: 'qux'}) }}
set_attribute ERROR: {{ test_slot_content|set_attribute('qux', null) }}
set_attribute OK: {{ test_slot_content|set_attribute('quux', 'foo') }}
set_attribute OK: {{ test_slot_content|set_attribute('foo', 'bar')|set_attribute('bar', 'baz') }}
set_attribute OK: {{ test_slot_content|set_attribute('corge', ['foo', 'bar']) }}

add_class ERROR: {{ 'foo'|add_class('bar') }}
add_class OK: {{ test_slot_content|add_class('grault')|add_class('quux') }}

t NOTICE: {{ ''|t }}
t OK: {{ 'foo'|t }}

trans NOTICE: {{ ''|trans }}
trans WARNING: {{ 'foo'|trans }}

abs ERROR: {{ true|abs }}
abs OK: {{ 12.33|abs }}

clean_id ERROR: {{ -5|clean_id }}
clean_id ERROR: {{ 2.33|clean_id }}
clean_id ERROR: {{ true|clean_id }}
clean_id OK: {{ 'Az#"_!gH'|clean_id }}

--- TESTS FUNCTION ---

-- IGNORE --

render_var: {{ render_var([]) }}

-- ALLOW --

create_attribute: {{ create_attribute() }}
cycle: {% set cycle_items = ['foo', 'bar', 'baz'] %}{% for i in 0..10 %}{{ cycle(cycle_items, i) }}{% endfor %}
max: {{ max(1, 3, 2) }}
min: {{ min(1, 3, 2) }}
random: {{ 'foo'|default(random()) }}
range: {% for range_items in range(0, 3) %}{{ range_items }}{% endfor %}
include: {{ include('sdc_devel_theme_test:foo', {}, with_context: false) }}
icon: {{ icon('foo', 'bar', []) }}

-- WARN --

source WARNING: {{ source('test.html', true) }}
include without with_context WARNING: {{ include('sdc_devel_theme_test:bar') }}

-- DEPRECATE --

{# component WARNING:{{ component('sdc_devel_theme_test:foo') }} #}
{# pattern WARNING:{{ pattern('sdc_devel_theme_test:bar') }} #}

-- FORBID --

active_theme ERROR: {{ active_theme() }}
active_theme_path ERROR: {{ active_theme_path() }}
attach_library ERROR: {{ attach_library('system/maintenance') }}
constant:PHP_VERSION ERROR: {{ constant('PHP_VERSION') }}
date function ERROR: {% set date = date('-2days', 'Europe/Paris') %} empty
file_url ERROR: {{ file_url('public://foo.txt') }}
link ERROR: {{ link('foo', 'http://foo.bar') }}
path ERROR: {{ path('<front>') }}
url ERROR: {{ url('<none>') }}

embed WARNING: {% embed 'sdc_devel_theme_test:bar' %}{% endembed %}
block WARNING: {% block foo %}{% endblock %}{{ block('foo') }}

import ERROR: {% from 'block--local-actions-block.html.twig' import input as foo %}
import ERROR: {% from 'links.html.twig' import input as foo %}
import ERROR: {% import 'links.html.twig' as links %}{{ links|join(',') }}

flush ERROR: {% flush %}

validate_component_props ERROR: {{ validate_component_props('sdc_devel_theme_test:foo') }}
add_component_context ERROR: {{ add_component_context('sdc_devel_theme_test:foo') }}

-- Test case for some functions --

random ERROR: {% set foo_random = random() %} {{ foo_random }}
random ERROR: {{ foo_random ~ random() }}
random ERROR: {% set bar_random = foo_random ~ '--' ~ random() %} {{ bar_random }}
random ERROR: {{ random() }}
random ERROR: {% set qux_random = 'foo-' ~ bar_random ~ random() %} {{ qux_random }}
{% set quux_random = 'quux' %}
random OK: {% set foo_random = 'foo-' ~ quux_random|default(random()) %} {{ foo_random }}
random OK: {% set foo_random = quux_random|default(random()) %} {{ foo_random }}
random OK: {% set foo_random = quux_random|default(foo_random ~ '-' ~ random()) %} {{ foo_random }}

{% set loop_me = ['a', 'b'] %}
for in if NOTICE: {% if loop_me %}{% for i in loop_me %}{{ i }}{% endfor %}{% else %}No foo{% endif %}
for no if OK: {% for i in loop_me %}{{ i }}{% else %}No foo{% endfor %}

--- TESTS TESTS ---

{% set foo_tests = '' %}
defined ERROR: {% if foo_tests is defined %}{% endif %}
empty ERROR: {% if foo_tests is empty %}{% endif %}
iterable WARNING: {% if foo_tests is iterable %}{% endif %}
null WARNING: {{ foo_tests is null }}
null coalescing WARNING: {{ foo_tests ?? 'foo' }}
same as ERROR: {% if foo_tests is same as(false) %}{% endif %}

--- TESTS GETATTR ---

{% set foo = ['#bar'] %}
Get attribute WARNING: {{ foo['#bar'] }}

Direct method call ERROR: {{ test_prop_object.bundle() }}

--- TESTS NAME ---

componentMetadata ERROR: {{ componentMetadata.name }}
loop.parent ERROR: {% for item in ['foo'] %}{{ loop.parent.variant }}{% endfor %}

--- TESTS CONDITIONAL ---

{% set foo = false %}{% set bar = false %}{% set baz = false %}{% set qux = 'qux' %}{% set quux = 'quux' %}
No chained ternary ERROR: {{ foo ? baz : bar ? qux : baz ? qux : quux }}
No chained ternary ERROR: {{ foo ? baz : bar ? qux : baz }}
No chained ternary OK: {{ foo ? baz : bar }}
No chained ternary OK: {{ foo ? baz }}

{% set foo = false %}{% set bar = 'bar' %}
Use |default WARNING: {{ foo ? foo : bar }}
Use |default WARNING: {{ foo ?: bar }}
Use |default WARNING: {{ foo|default(false) }}
Use |default WARNING: {{ foo|default(true) }}
Use |default WARNING: {{ foo|default(foo) }}
Use |default OK: {{ foo|default(bar) }}

ternary test with boolean NOTICE: {{ qux == 'bar' ? true : false }}

--- TESTS TWIG SPECIFICS ---

{% for i in 1..['Foo', 'Bar']|length %}{{ i }}{% endfor %}

--- TESTS THIRD PARTY ---

{# Core module help #}
{{ help_route_link('foo', 'system.admin_reports') }}
{{ help_topic_link('core.content_structure') }}

{# Devel module #}
{{ devel_dump('foo') }}
{{ kpr('foo') }}
{{ kint('foo') }}
{{ devel_message('foo') }}
{{ dpm('foo') }}
{{ dsm('foo') }}

{# Third party modules #}
{# {{ country_names('') }} #}
{# {{ country_timezones('') }} #}
{# {{ currency_names('') }} #}
{# {{ html_classes('') }} #}
{# {{ language_names('') }} #}
{# {{ locale_names('') }} #}
{# {{ script_names('') }} #}
{# {{ template_from_string('') }} #}
{# {{ timezone_names('') }} #}
{# {{ wp_dump('') }} #}
{# {{ query_type('') }} #}
{# {{ query_executable('') }} #}

--- TESTS NOT SET ---

Not set ERROR: {{ bar_not_set }}

--- GLOBAL TESTS UNUSED ---

Unused ERROR: key_unused, item_unused, my_attributes_unused, macro_unused

{% macro test(macro_1, macro_unused) %}{{ macro_1 }}{% endmacro %}
{% set foo_set = 'foo' %}
{{ foo_set }}
{% for key_unused, item in test_prop_array %}
  {{ item }}
{% endfor %}
{% for item in test_prop_array %}
  {{ item }}
{% endfor %}
{% for item_unused in test_prop_array %}
  {{ foo_set }}
{% endfor %}
{% set my_attributes_unused = create_attribute() %}

--- END TESTS ---

{# --- TESTS CRITICAL --- #}

{# {{ 'foo' | abs }} #}
{# {{ my_var | t }} #}
{# {{ ['foo'] | t }} #}

{# --- TESTS NOT POSSIBLE IN TEMPLATE --- #}

{# Reason: extends is first line and need block for content #}
{# Covered by TwigValidatorRuleParentTest #}
{# {% extends 'links.html.twig' %}{% block foo %}{{ parent('bar') }}{% endblock %} #}

{# --- TESTS BLOCKED --- #}

{# Reason: GetAttrExpression, do not explicitly give 'attribute()' as name, hard to detect #}
{# {{ attribute(['foo', 'bar'], 'foo') }} #}

{# Reason: Can not work because replaced by render_var #}
{# raw WARNING: {{ 'foo' | raw }} #}

{# Reason: Can not work because of alias drupal_escape run on all var #}
{# escape NOTICE: {{ 'foo' | e }} #}
{# escape NOTICE: {{ 'foo' | escape }} #}
